# Generated by Django 3.0.3 on 2020-02-25 20:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import profiles.models.profilePicture
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 50 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=50, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='name')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone_number', models.CharField(db_index=True, max_length=16, verbose_name='phone number')),
                ('is_phone_number_verified', models.BooleanField(default=False, verbose_name='phone number verified')),
                ('date_joined', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.CharField(blank=True, max_length=3000, verbose_name='biograghy')),
                ('balance', models.IntegerField(default=0)),
                ('rate', models.IntegerField(default=0)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Man'), ('W', 'Woman'), ('N', 'None')], max_length=10)),
                ('status_code', models.IntegerField(default=0)),
                ('age', models.IntegerField(default=0)),
                ('birthday', models.DateTimeField(blank=True, null=True, verbose_name='Birth Day')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(upload_to=profiles.models.profilePicture.profile_picture_attachment_path)),
                ('thumbnail', models.ImageField(upload_to=profiles.models.profilePicture.profile_picture_thumbnail_attachment_path)),
                ('priority', models.IntegerField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_pictures', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
